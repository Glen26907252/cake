{"ast":null,"code":"//  import React, { Component } from 'react'\n//  import Footer from '../Footer/Footer';\n//  import './productList.css';\n//  import axios from 'axios'\n//  export default class QueryAllChat extends Component {\n//    constructor(props) {\n//      super(props);\n//      this.state = {\n//        deleteId: ''\n//      };\n//    }\n//    handleInputChange = (e) => {\n//      this.setState({\n//        deleteId: e.target.value\n//      });\n//    };\n//    handleDelete = () => {\n//      const { deleteId } = this.state;\n//      axios.delete(`http://192.168.1.103:8080/cake/delete/${deleteId}`)\n//        .then(response => {\n//          // 更新显示的内容，例如重新获取数据并显示\n//          this.test();\n//        })\n//        .catch(error => {\n//          console.error('删除失败:', error);\n//        });\n//    };\n//    test = () => {\n//      axios.get(\"http://192.168.1.103:8080/cake/queryAllCake\")\n//        .then(response => {\n//          let y = \"<table border=1 align='center' width=70%>\";\n//          y += \"<tr><th>訂單編號</th><th>商品代號</th><th>商品品名</th><th>數量</th><th>金額</th></tr>\";\n//          let sum = 0;\n//          for (let i = 0; i < response.data.length; i++) {\n//            const amount = response.data[i].amount.toLocaleString(); // 數量加上千分位逗號\n//            const subtotal = response.data[i].subtotal.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }); // 金額保留兩位小數，並加上千分位逗號\n\n//            y += \"<tr><td>\" + response.data[i].id +\n//              \"<td>\" + response.data[i].item +\n//              \"<td>\" + response.data[i].itemName +\n//              \"<td class='right-align'>\" + amount +\n//              \"<td class='right-align'>\" + subtotal + \" NTD\";\n//            sum++;\n//          }\n//          y += \"</table>\";\n//          let s = document.getElementById(\"show\");\n//          s.innerHTML = y + \"<br/>共:\" + sum + \"筆\";\n//        })\n//        .catch(error => {\n//          console.error('获取数据失败:', error);\n//        });\n//    };\n//    render() {\n//      return (\n//        <div>\n//          <img src=\"images/banner.jpg\" className=\"img-responsive\" id=\"banner\" alt=\"\" /><br/>\n//          <button className=\"custom-button\" onClick={this.test}>查看訂購內容</button><br/><br/>\n//          <input type=\"text\" value={this.state.deleteId} onChange={this.handleInputChange} placeholder=\"輸入要刪除的訂單ID\" />\n//          <button className=\"custom-button\" onClick={this.handleDelete}>刪除</button><br/><br/>\n\n//          <div id=\"show\"></div>\n//          <Footer />\n//        </div>\n//      )\n//    }\n//  }\n// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n// import React, { Component } from 'react'\n// import Footer from '../Footer/Footer';\n// import './productList.css';\n// import axios from 'axios'\n\n// export default class QueryAllChat extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       deleteId: '',\n//       showDeleteControls: false, // 添加一個標誌位來控制刪除相關元素的顯示\n//       queryResult: []\n//     };\n//   }\n\n//   handleInputChange = (e) => {\n//     this.setState({\n//       deleteId: e.target.value\n//     });\n//   };\n\n//   handleDeleteClick = () => {\n//     this.setState({\n//       showDeleteControls: true, // 點擊刪除時設置標誌位為true，顯示相關元素\n//       queryResult: [] // 清空查詢結果\n//     });\n//   };\n\n//   handleDelete = () => {\n//     const { deleteId } = this.state;\n//     axios.delete(`http://192.168.1.103:8080/cake/delete/${deleteId}`)\n//       .then(response => {\n//         this.test();\n//       })\n//       .catch(error => {\n//         console.error('删除失败:', error);\n//       });\n//   };\n\n//   test = () => {\n//     axios.get(\"http://192.168.1.103:8080/cake/queryAllCake\")\n//       .then(response => {\n//         this.setState({\n//           queryResult: response.data,\n//           showDeleteControls: false // 重置標誌位為false，以便在切換回查詢訂單時隱藏相關元素\n//         });\n//       })\n//       .catch(error => {\n//         console.error('获取数据失败:', error);\n//       });\n//   };\n\n//   render() {\n//     const { showDeleteControls, queryResult } = this.state;\n//     return (\n//       <div>\n//         <img src=\"images/banner.jpg\" className=\"img-responsive\" id=\"banner\" alt=\"\" /><br/>\n//         <ul className=\"nav nav-tabs\">\n//           <li className=\"nav-item\">\n//             <button className=\"nav-link active\" onClick={this.test}>查看訂單</button>\n//           </li>\n//           <li className=\"nav-item\">\n//             <button className=\"nav-link\" onClick={this.handleDeleteClick}>刪除</button>\n//           </li>\n//         </ul>\n//         {showDeleteControls && ( // 條件渲染刪除相關元素\n//           <div>\n//             <input type=\"text\" value={this.state.deleteId} onChange={this.handleInputChange} placeholder=\"輸入要刪除的訂單ID\" />\n//             <button onClick={this.handleDelete}>確認刪除</button>\n//           </div>\n//         )}\n//         <div id=\"show\">\n//           <table border=\"1\" align=\"center\" width=\"70%\">\n//             <thead>\n//               <tr>\n//                 <th>訂單編號</th>\n//                 <th>商品代號</th>\n//                 <th>商品品名</th>\n//                 <th>數量</th>\n//                 <th>金額</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {queryResult.map(item => (\n//                 <tr key={item.id}>\n//                   <td>{item.id}</td>\n//                   <td>{item.item}</td>\n//                   <td>{item.itemName}</td>\n//                   <td className=\"right-align\">{item.amount.toLocaleString()}</td>\n//                   <td className=\"right-align\">{item.subtotal.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })} NTD</td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//           <br/>共:{queryResult.length}筆\n//         </div>\n//         <Footer />\n//       </div>\n//     )\n//   }\n// }","map":{"version":3,"names":[],"sources":["C:/cake-app/src/components/ProductList/QueryAllChat.js"],"sourcesContent":["//  import React, { Component } from 'react'\r\n//  import Footer from '../Footer/Footer';\r\n//  import './productList.css';\r\n//  import axios from 'axios'\r\n//  export default class QueryAllChat extends Component {\r\n//    constructor(props) {\r\n//      super(props);\r\n//      this.state = {\r\n//        deleteId: ''\r\n//      };\r\n//    }\r\n//    handleInputChange = (e) => {\r\n//      this.setState({\r\n//        deleteId: e.target.value\r\n//      });\r\n//    };\r\n//    handleDelete = () => {\r\n//      const { deleteId } = this.state;\r\n//      axios.delete(`http://192.168.1.103:8080/cake/delete/${deleteId}`)\r\n//        .then(response => {\r\n//          // 更新显示的内容，例如重新获取数据并显示\r\n//          this.test();\r\n//        })\r\n//        .catch(error => {\r\n//          console.error('删除失败:', error);\r\n//        });\r\n//    };\r\n//    test = () => {\r\n//      axios.get(\"http://192.168.1.103:8080/cake/queryAllCake\")\r\n//        .then(response => {\r\n//          let y = \"<table border=1 align='center' width=70%>\";\r\n//          y += \"<tr><th>訂單編號</th><th>商品代號</th><th>商品品名</th><th>數量</th><th>金額</th></tr>\";\r\n//          let sum = 0;\r\n//          for (let i = 0; i < response.data.length; i++) {\r\n//            const amount = response.data[i].amount.toLocaleString(); // 數量加上千分位逗號\r\n//            const subtotal = response.data[i].subtotal.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }); // 金額保留兩位小數，並加上千分位逗號\r\n     \r\n//            y += \"<tr><td>\" + response.data[i].id +\r\n//              \"<td>\" + response.data[i].item +\r\n//              \"<td>\" + response.data[i].itemName +\r\n//              \"<td class='right-align'>\" + amount +\r\n//              \"<td class='right-align'>\" + subtotal + \" NTD\";\r\n//            sum++;\r\n//          }\r\n//          y += \"</table>\";\r\n//          let s = document.getElementById(\"show\");\r\n//          s.innerHTML = y + \"<br/>共:\" + sum + \"筆\";\r\n//        })\r\n//        .catch(error => {\r\n//          console.error('获取数据失败:', error);\r\n//        });\r\n//    };\r\n//    render() {\r\n//      return (\r\n//        <div>\r\n//          <img src=\"images/banner.jpg\" className=\"img-responsive\" id=\"banner\" alt=\"\" /><br/>\r\n//          <button className=\"custom-button\" onClick={this.test}>查看訂購內容</button><br/><br/>\r\n//          <input type=\"text\" value={this.state.deleteId} onChange={this.handleInputChange} placeholder=\"輸入要刪除的訂單ID\" />\r\n//          <button className=\"custom-button\" onClick={this.handleDelete}>刪除</button><br/><br/>\r\n \r\n\r\n//          <div id=\"show\"></div>\r\n//          <Footer />\r\n//        </div>\r\n//      )\r\n//    }\r\n//  }\r\n// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n// import React, { Component } from 'react'\r\n// import Footer from '../Footer/Footer';\r\n// import './productList.css';\r\n// import axios from 'axios'\r\n\r\n// export default class QueryAllChat extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       deleteId: '',\r\n//       showDeleteControls: false, // 添加一個標誌位來控制刪除相關元素的顯示\r\n//       queryResult: []\r\n//     };\r\n//   }\r\n\r\n//   handleInputChange = (e) => {\r\n//     this.setState({\r\n//       deleteId: e.target.value\r\n//     });\r\n//   };\r\n\r\n//   handleDeleteClick = () => {\r\n//     this.setState({\r\n//       showDeleteControls: true, // 點擊刪除時設置標誌位為true，顯示相關元素\r\n//       queryResult: [] // 清空查詢結果\r\n//     });\r\n//   };\r\n\r\n//   handleDelete = () => {\r\n//     const { deleteId } = this.state;\r\n//     axios.delete(`http://192.168.1.103:8080/cake/delete/${deleteId}`)\r\n//       .then(response => {\r\n//         this.test();\r\n//       })\r\n//       .catch(error => {\r\n//         console.error('删除失败:', error);\r\n//       });\r\n//   };\r\n\r\n//   test = () => {\r\n//     axios.get(\"http://192.168.1.103:8080/cake/queryAllCake\")\r\n//       .then(response => {\r\n//         this.setState({\r\n//           queryResult: response.data,\r\n//           showDeleteControls: false // 重置標誌位為false，以便在切換回查詢訂單時隱藏相關元素\r\n//         });\r\n//       })\r\n//       .catch(error => {\r\n//         console.error('获取数据失败:', error);\r\n//       });\r\n//   };\r\n\r\n//   render() {\r\n//     const { showDeleteControls, queryResult } = this.state;\r\n//     return (\r\n//       <div>\r\n//         <img src=\"images/banner.jpg\" className=\"img-responsive\" id=\"banner\" alt=\"\" /><br/>\r\n//         <ul className=\"nav nav-tabs\">\r\n//           <li className=\"nav-item\">\r\n//             <button className=\"nav-link active\" onClick={this.test}>查看訂單</button>\r\n//           </li>\r\n//           <li className=\"nav-item\">\r\n//             <button className=\"nav-link\" onClick={this.handleDeleteClick}>刪除</button>\r\n//           </li>\r\n//         </ul>\r\n//         {showDeleteControls && ( // 條件渲染刪除相關元素\r\n//           <div>\r\n//             <input type=\"text\" value={this.state.deleteId} onChange={this.handleInputChange} placeholder=\"輸入要刪除的訂單ID\" />\r\n//             <button onClick={this.handleDelete}>確認刪除</button>\r\n//           </div>\r\n//         )}\r\n//         <div id=\"show\">\r\n//           <table border=\"1\" align=\"center\" width=\"70%\">\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>訂單編號</th>\r\n//                 <th>商品代號</th>\r\n//                 <th>商品品名</th>\r\n//                 <th>數量</th>\r\n//                 <th>金額</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {queryResult.map(item => (\r\n//                 <tr key={item.id}>\r\n//                   <td>{item.id}</td>\r\n//                   <td>{item.item}</td>\r\n//                   <td>{item.itemName}</td>\r\n//                   <td className=\"right-align\">{item.amount.toLocaleString()}</td>\r\n//                   <td className=\"right-align\">{item.subtotal.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })} NTD</td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//           <br/>共:{queryResult.length}筆\r\n//         </div>\r\n//         <Footer />\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}