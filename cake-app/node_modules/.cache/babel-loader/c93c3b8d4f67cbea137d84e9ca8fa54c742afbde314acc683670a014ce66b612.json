{"ast":null,"code":"import React, { Component } from 'react';\nimport Footer from '../Footer/Footer';\nimport './productList.css';\nimport axios from 'axios';\nexport default class QueryAllChat extends Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = e => {\n      this.setState({\n        deleteId: e.target.value\n      });\n    };\n    this.handleDeleteClick = () => {\n      this.setState({\n        showDeleteControls: true,\n        showUpdateControls: false // 添加这行以隐藏修改表单\n      });\n      this.test();\n    };\n    this.handleDelete = () => {\n      const {\n        deleteId\n      } = this.state;\n      axios.delete(`http://localhost:8080/cake/delete/${deleteId}`).then(response => {\n        this.test();\n        this.setState({\n          deleteId: ''\n        });\n      }).catch(error => {\n        console.error('删除失败:', error);\n      });\n    };\n    this.test = () => {\n      axios.get(\"http://localhost:8080/cake/queryAllCake\").then(response => {\n        this.setState({\n          queryResult: response.data\n        });\n      }).catch(error => {\n        console.error('获取数据失败:', error);\n      });\n    };\n    this.handleQueryClick = () => {\n      this.setState({\n        showDeleteControls: false,\n        showUpdateControls: false // 添加这行以隐藏修改表单\n      });\n      this.test();\n    };\n    this.handleUpdateClick = () => {\n      this.setState({\n        showUpdateControls: true,\n        showDeleteControls: false\n      });\n      this.test();\n    };\n    this.handleUpdateInputChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n    this.handleUpdate = () => {\n      const {\n        updateId,\n        updateItem,\n        updateQuantity\n      } = this.state;\n      axios.get(`http://localhost:8080/products/queryAllProducts`).then(response => {\n        const products = response.data;\n        console.log('商品列表:', products);\n\n        // 將 updateItem 轉換為字符串類型\n        const stringUpdateItem = updateItem.toString();\n        const product = products.find(p => p.product_id === stringUpdateItem);\n        console.log('查找的商品:', product);\n        if (!product) {\n          console.error('商品不存在');\n          return;\n        }\n        const data = {\n          item: stringUpdateItem,\n          item_name: product.name,\n          amount: updateQuantity,\n          subtotal: product.price * updateQuantity\n        };\n        axios.put(`http://localhost:8080/cake/update/${updateId}`, data).then(response => {\n          this.test(); // 更新訂單後刷新訂單列表\n          this.setState({\n            updateId: '',\n            updateItem: '',\n            updateQuantity: '',\n            showUpdateControls: false\n          });\n        }).catch(error => {\n          console.error('更新訂單失敗:', error);\n        });\n      }).catch(error => {\n        console.error('獲取商品信息失敗:', error);\n      });\n    };\n    this.state = {\n      deleteId: '',\n      updateId: '',\n      updateItem: '',\n      updateQuantity: '',\n      showDeleteControls: false,\n      showUpdateControls: false,\n      queryResult: []\n    };\n  }\n\n  // render() {\n  //   const { showDeleteControls, showUpdateControls, queryResult } = this.state;\n  //   return (\n  //     <div>\n  //       <img src=\"images/banner.jpg\" className=\"img-responsive\" id=\"banner\" alt=\"\" /><br/>\n  //       <ul className=\"nav nav-tabs\">\n  //         <li className=\"nav-item\">\n  //           <button className=\"custom-button\" onClick={this.handleQueryClick}>查看訂單</button>\n  //         </li>\n  //         <li className=\"nav-item\">\n  //           <button className=\"custom-button\" onClick={this.handleDeleteClick}>刪除</button>\n  //         </li>\n  //         <li className=\"nav-item\">\n  //           <button className=\"custom-button\" onClick={this.handleUpdateClick}>修改</button>\n  //         </li>\n  //       </ul>\n  //       {showDeleteControls && (\n  //         <div>\n  //           <input type=\"text\" value={this.state.deleteId} onChange={this.handleInputChange} placeholder=\"輸入要刪除的訂單ID\" />\n  //           <button onClick={this.handleDelete}>確認刪除</button>\n  //         </div>\n  //       )}\n  //       {showUpdateControls && (\n  //         <div>\n  //           <input type=\"text\" name=\"updateId\" value={this.state.updateId} onChange={this.handleUpdateInputChange} placeholder=\"輸入要修改的訂單ID\" />\n  //           <input type=\"text\" name=\"updateItem\" value={this.state.updateItem} onChange={this.handleUpdateInputChange} placeholder=\"輸入要修改的商品\" />\n  //           <input type=\"text\" name=\"updateQuantity\" value={this.state.updateQuantity} onChange={this.handleUpdateInputChange} placeholder=\"輸入修改後的數量\" />\n  //           <button onClick={this.handleUpdate}>確認修改</button>\n  //         </div>\n  //       )}\n  //       {queryResult.length > 0 && (\n  //         <div>\n  //           <table border=\"1\" width=\"70%\">\n  //             <thead>\n  //               <tr>\n  //                 <th>訂單編號</th>\n  //                 <th>商品代號</th>\n  //                 <th>商品品名</th>\n  //                 <th>數量</th>\n  //                 <th>金額</th>\n  //               </tr>\n  //             </thead>\n  //             <tbody>\n  //               {queryResult.map(item => (\n  //                 <tr key={item.id}>\n  //                   <td>{item.id}</td>\n  //                   <td>{item.item}</td>\n  //                   <td>{item.item_name}</td>\n  //                   <td className=\"right-align\">{item.amount ? item.amount.toLocaleString() : \"\"}</td>\n  //                   <td className=\"right-align\">{item.subtotal ? item.subtotal.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }) + \" NTD\" : \"\"}</td>\n  //                 </tr>\n  //               ))}\n  //             </tbody>\n  //             共:{queryResult.length}筆\n  //           </table>\n\n  //         </div>\n  //       )}\n  //       <Footer />\n  //     </div>\n  //   )\n  // }\n\n  // render() {\n  //   const { showDeleteControls, showUpdateControls, queryResult } = this.state;\n  //   return (\n  //     <div className=\"container\">\n  // <img src=\"images/banner.jpg\" className=\"img-responsive\" id=\"banner\" alt=\"\" /><br/>\n  // <ul className=\"nav nav-tabs\">\n  //   <li className=\"nav-item\">\n  //     <button className=\"custom-button\" onClick={this.handleQueryClick}>查看訂單</button>\n  //   </li>\n  //   <li className=\"nav-item\">\n  //     <button className=\"custom-button\" onClick={this.handleDeleteClick}>刪除</button>\n  //   </li>\n  //   <li className=\"nav-item\">\n  //     <button className=\"custom-button\" onClick={this.handleUpdateClick}>修改</button>\n  //   </li>\n  // </ul>\n  // {showDeleteControls && (\n  //   <div>\n  //     <input type=\"text\" value={this.state.deleteId} onChange={this.handleInputChange} placeholder=\"輸入要刪除的訂單ID\" />\n  //     <button onClick={this.handleDelete}>確認刪除</button>\n  //   </div>\n  // )}\n  // {showUpdateControls && (\n  //   <div>\n  //     <input type=\"text\" name=\"updateId\" value={this.state.updateId} onChange={this.handleUpdateInputChange} placeholder=\"輸入要修改的訂單ID\" />\n  //     <input type=\"text\" name=\"updateItem\" value={this.state.updateItem} onChange={this.handleUpdateInputChange} placeholder=\"輸入要修改的商品\" />\n  //     <input type=\"text\" name=\"updateQuantity\" value={this.state.updateQuantity} onChange={this.handleUpdateInputChange} placeholder=\"輸入修改後的數量\" />\n  //     <button onClick={this.handleUpdate}>確認修改</button>\n  //   </div>\n  // )}\n  // {queryResult.length > 0 && (\n  //   <div className=\"table-container\">\n  //     <table border=\"1\" className=\"table\">\n  //       <thead>\n  //         <tr>\n  //           <th>訂單編號</th>\n  //           <th>商品代號</th>\n  //           <th>商品品名</th>\n  //           <th>數量</th>\n  //           <th>金額</th>\n  //         </tr>\n  //       </thead>\n  //       <tbody>\n  //         {queryResult.map(item => (\n  //           <tr key={item.id}>\n  //             <td>{item.id}</td>\n  //             <td>{item.item}</td>\n  //             <td>{item.item_name}</td>\n  //             <td className=\"right-align\">{item.amount ? item.amount.toLocaleString() : \"\"}</td>\n  //             <td className=\"right-align\">{item.subtotal ? item.subtotal.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }) + \" NTD\" : \"\"}</td>\n  //           </tr>\n  //         ))}\n  //       </tbody>\n  //     </table>\n  //     <br />共:{queryResult.length}筆\n  //   </div>\n  //   )}\n  //   <Footer />\n  //   </div>\n\n  //   )\n  // }\n}","map":{"version":3,"names":["React","Component","Footer","axios","QueryAllChat","constructor","props","handleInputChange","e","setState","deleteId","target","value","handleDeleteClick","showDeleteControls","showUpdateControls","test","handleDelete","state","delete","then","response","catch","error","console","get","queryResult","data","handleQueryClick","handleUpdateClick","handleUpdateInputChange","name","handleUpdate","updateId","updateItem","updateQuantity","products","log","stringUpdateItem","toString","product","find","p","product_id","item","item_name","amount","subtotal","price","put"],"sources":["C:/cake-app/src/components/ProductList/QueryAllChat.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport Footer from '../Footer/Footer';\r\nimport './productList.css';\r\nimport axios from 'axios';\r\n\r\nexport default class QueryAllChat extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      deleteId: '',\r\n      updateId: '',\r\n      updateItem: '',\r\n      updateQuantity: '',\r\n      showDeleteControls: false,\r\n      showUpdateControls: false,\r\n      queryResult: []\r\n    };\r\n  }\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({\r\n      deleteId: e.target.value\r\n    });\r\n  };\r\n\r\n  handleDeleteClick = () => {\r\n    this.setState({\r\n      showDeleteControls: true,\r\n      showUpdateControls: false, // 添加这行以隐藏修改表单\r\n    });\r\n    this.test();\r\n  };\r\n\r\n  handleDelete = () => {\r\n    const { deleteId } = this.state;\r\n    axios.delete(`http://localhost:8080/cake/delete/${deleteId}`)\r\n      .then(response => {\r\n        this.test();\r\n        this.setState({ deleteId: '' });\r\n      })\r\n      .catch(error => {\r\n        console.error('删除失败:', error);\r\n      });\r\n  };\r\n\r\n  test = () => {\r\n    axios.get(\"http://localhost:8080/cake/queryAllCake\")\r\n      .then(response => {\r\n        this.setState({\r\n          queryResult: response.data\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.error('获取数据失败:', error);\r\n      });\r\n  };\r\n\r\n  handleQueryClick = () => {\r\n    this.setState({\r\n      showDeleteControls: false,\r\n      showUpdateControls: false, // 添加这行以隐藏修改表单\r\n    });\r\n    this.test();\r\n  };\r\n\r\n  handleUpdateClick = () => {\r\n    this.setState({\r\n      showUpdateControls: true,\r\n      showDeleteControls: false,\r\n    });\r\n    this.test();\r\n  };\r\n\r\n  handleUpdateInputChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleUpdate = () => {\r\n    const { updateId, updateItem, updateQuantity } = this.state;\r\n  \r\n    axios.get(`http://localhost:8080/products/queryAllProducts`)\r\n      .then(response => {\r\n        const products = response.data;\r\n        console.log('商品列表:', products);\r\n  \r\n        // 將 updateItem 轉換為字符串類型\r\n        const stringUpdateItem = updateItem.toString();\r\n  \r\n        const product = products.find(p => p.product_id === stringUpdateItem);\r\n        console.log('查找的商品:', product);\r\n  \r\n        if (!product) {\r\n          console.error('商品不存在');\r\n          return;\r\n        }\r\n  \r\n        const data = {\r\n          item: stringUpdateItem,\r\n          item_name: product.name,\r\n          amount: updateQuantity,\r\n          subtotal: product.price * updateQuantity,\r\n        };\r\n  \r\n        axios.put(`http://localhost:8080/cake/update/${updateId}`, data)\r\n          .then(response => {\r\n            this.test(); // 更新訂單後刷新訂單列表\r\n            this.setState({ \r\n              updateId: '',\r\n              updateItem: '',\r\n              updateQuantity: '',\r\n              showUpdateControls: false\r\n            });\r\n          })\r\n          .catch(error => {\r\n            console.error('更新訂單失敗:', error);\r\n          });\r\n      })\r\n      .catch(error => {\r\n        console.error('獲取商品信息失敗:', error);\r\n      });\r\n  };\r\n  \r\n  // render() {\r\n  //   const { showDeleteControls, showUpdateControls, queryResult } = this.state;\r\n  //   return (\r\n  //     <div>\r\n  //       <img src=\"images/banner.jpg\" className=\"img-responsive\" id=\"banner\" alt=\"\" /><br/>\r\n  //       <ul className=\"nav nav-tabs\">\r\n  //         <li className=\"nav-item\">\r\n  //           <button className=\"custom-button\" onClick={this.handleQueryClick}>查看訂單</button>\r\n  //         </li>\r\n  //         <li className=\"nav-item\">\r\n  //           <button className=\"custom-button\" onClick={this.handleDeleteClick}>刪除</button>\r\n  //         </li>\r\n  //         <li className=\"nav-item\">\r\n  //           <button className=\"custom-button\" onClick={this.handleUpdateClick}>修改</button>\r\n  //         </li>\r\n  //       </ul>\r\n  //       {showDeleteControls && (\r\n  //         <div>\r\n  //           <input type=\"text\" value={this.state.deleteId} onChange={this.handleInputChange} placeholder=\"輸入要刪除的訂單ID\" />\r\n  //           <button onClick={this.handleDelete}>確認刪除</button>\r\n  //         </div>\r\n  //       )}\r\n  //       {showUpdateControls && (\r\n  //         <div>\r\n  //           <input type=\"text\" name=\"updateId\" value={this.state.updateId} onChange={this.handleUpdateInputChange} placeholder=\"輸入要修改的訂單ID\" />\r\n  //           <input type=\"text\" name=\"updateItem\" value={this.state.updateItem} onChange={this.handleUpdateInputChange} placeholder=\"輸入要修改的商品\" />\r\n  //           <input type=\"text\" name=\"updateQuantity\" value={this.state.updateQuantity} onChange={this.handleUpdateInputChange} placeholder=\"輸入修改後的數量\" />\r\n  //           <button onClick={this.handleUpdate}>確認修改</button>\r\n  //         </div>\r\n  //       )}\r\n  //       {queryResult.length > 0 && (\r\n  //         <div>\r\n  //           <table border=\"1\" width=\"70%\">\r\n  //             <thead>\r\n  //               <tr>\r\n  //                 <th>訂單編號</th>\r\n  //                 <th>商品代號</th>\r\n  //                 <th>商品品名</th>\r\n  //                 <th>數量</th>\r\n  //                 <th>金額</th>\r\n  //               </tr>\r\n  //             </thead>\r\n  //             <tbody>\r\n  //               {queryResult.map(item => (\r\n  //                 <tr key={item.id}>\r\n  //                   <td>{item.id}</td>\r\n  //                   <td>{item.item}</td>\r\n  //                   <td>{item.item_name}</td>\r\n  //                   <td className=\"right-align\">{item.amount ? item.amount.toLocaleString() : \"\"}</td>\r\n  //                   <td className=\"right-align\">{item.subtotal ? item.subtotal.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }) + \" NTD\" : \"\"}</td>\r\n  //                 </tr>\r\n  //               ))}\r\n  //             </tbody>\r\n  //             共:{queryResult.length}筆\r\n  //           </table>\r\n             \r\n  //         </div>\r\n  //       )}\r\n  //       <Footer />\r\n  //     </div>\r\n  //   )\r\n  // }\r\n  \r\n\r\n  // render() {\r\n  //   const { showDeleteControls, showUpdateControls, queryResult } = this.state;\r\n  //   return (\r\n  //     <div className=\"container\">\r\n  // <img src=\"images/banner.jpg\" className=\"img-responsive\" id=\"banner\" alt=\"\" /><br/>\r\n  // <ul className=\"nav nav-tabs\">\r\n  //   <li className=\"nav-item\">\r\n  //     <button className=\"custom-button\" onClick={this.handleQueryClick}>查看訂單</button>\r\n  //   </li>\r\n  //   <li className=\"nav-item\">\r\n  //     <button className=\"custom-button\" onClick={this.handleDeleteClick}>刪除</button>\r\n  //   </li>\r\n  //   <li className=\"nav-item\">\r\n  //     <button className=\"custom-button\" onClick={this.handleUpdateClick}>修改</button>\r\n  //   </li>\r\n  // </ul>\r\n  // {showDeleteControls && (\r\n  //   <div>\r\n  //     <input type=\"text\" value={this.state.deleteId} onChange={this.handleInputChange} placeholder=\"輸入要刪除的訂單ID\" />\r\n  //     <button onClick={this.handleDelete}>確認刪除</button>\r\n  //   </div>\r\n  // )}\r\n  // {showUpdateControls && (\r\n  //   <div>\r\n  //     <input type=\"text\" name=\"updateId\" value={this.state.updateId} onChange={this.handleUpdateInputChange} placeholder=\"輸入要修改的訂單ID\" />\r\n  //     <input type=\"text\" name=\"updateItem\" value={this.state.updateItem} onChange={this.handleUpdateInputChange} placeholder=\"輸入要修改的商品\" />\r\n  //     <input type=\"text\" name=\"updateQuantity\" value={this.state.updateQuantity} onChange={this.handleUpdateInputChange} placeholder=\"輸入修改後的數量\" />\r\n  //     <button onClick={this.handleUpdate}>確認修改</button>\r\n  //   </div>\r\n  // )}\r\n  // {queryResult.length > 0 && (\r\n  //   <div className=\"table-container\">\r\n  //     <table border=\"1\" className=\"table\">\r\n  //       <thead>\r\n  //         <tr>\r\n  //           <th>訂單編號</th>\r\n  //           <th>商品代號</th>\r\n  //           <th>商品品名</th>\r\n  //           <th>數量</th>\r\n  //           <th>金額</th>\r\n  //         </tr>\r\n  //       </thead>\r\n  //       <tbody>\r\n  //         {queryResult.map(item => (\r\n  //           <tr key={item.id}>\r\n  //             <td>{item.id}</td>\r\n  //             <td>{item.item}</td>\r\n  //             <td>{item.item_name}</td>\r\n  //             <td className=\"right-align\">{item.amount ? item.amount.toLocaleString() : \"\"}</td>\r\n  //             <td className=\"right-align\">{item.subtotal ? item.subtotal.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }) + \" NTD\" : \"\"}</td>\r\n  //           </tr>\r\n  //         ))}\r\n  //       </tbody>\r\n  //     </table>\r\n  //     <br />共:{queryResult.length}筆\r\n  //   </div>\r\n  //   )}\r\n  //   <Footer />\r\n  //   </div>\r\n\r\n  //   )\r\n  // }\r\n\r\n\r\n  \r\n  \r\n}"],"mappings":"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CL,IAAI,CAAC,CAAC,CAAC,CAAC;UACb,IAAI,CAACP,QAAQ,CAAC;YACZwB,QAAQ,EAAE,EAAE;YACZC,UAAU,EAAE,EAAE;YACdC,cAAc,EAAE,EAAE;YAClBpB,kBAAkB,EAAE;UACtB,CAAC,CAAC;QACJ,CAAC,CAAC,CACDO,KAAK,CAACC,KAAK,IAAI;UACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;QACjC,CAAC,CAAC;MACN,CAAC,CAAC,CACDD,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;MACnC,CAAC,CAAC;IACN,CAAC;IAlHC,IAAI,CAACL,KAAK,GAAG;MACXR,QAAQ,EAAE,EAAE;MACZuB,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,EAAE;MACdC,cAAc,EAAE,EAAE;MAClBrB,kBAAkB,EAAE,KAAK;MACzBC,kBAAkB,EAAE,KAAK;MACzBW,WAAW,EAAE;IACf,CAAC;EACH;;EA2GA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;AAKF"},"metadata":{},"sourceType":"module","externalDependencies":[]}